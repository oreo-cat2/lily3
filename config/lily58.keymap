/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <12 13>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <22 23>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp GRAVE   &kp N1  &kp N2  &kp N3        &kp N4    &kp N5                          &kp N6  &kp N7     &kp N8         &kp N9   &kp N0         &kp BACKSLASH
&kp TAB     &kp Q   &kp W   &kp F         &kp P     &kp G                           &kp J   &kp L      &kp U          &kp Y    &kp SEMICOLON  &kp BACKSPACE
&kp LSHIFT  &kp A   &kp R   &kp S         &kp T     &kp D                           &kp H   &kp N      &kp E          &kp I    &kp O          &kp SQT
&kp LCTRL   &kp Z   &kp X   &kp C         &kp V     &kp B   &kp LBKT     &kp RBKT   &kp K   &kp M      &kp COMMA      &kp DOT  &kp FSLH       &kp RSHFT
                            &kp LEFT_GUI  &kp LEFT  &tog 1  &kp ENTER    &kp SPACE  &tog 2  &kp RIGHT  &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                    &trans        &trans        &trans        &trans        &trans        &trans
&trans      &kp F2            &kp F3             &kp F4             &kp F5        &kp F6                          &kp ASTERISK  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_EQUAL  &trans
&trans      &kp EXCL          &kp AT             &kp HASH           &kp DOLLAR    &kp PRCNT                       &kp MINUS     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0  &kp KP_COMMA
&trans      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans        &trans        &trans    &trans  &kp PLUS      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH     &kp PERIOD
                                                 &trans             &trans        &trans        &trans    &trans  &tog 0        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &kp F1         &kp F2        &kp F3        &kp F4           &kp F5                          &kp F6           &kp F7          &kp F8        &kp F9          &kp F10          &trans
&trans  &kp PAGE_DOWN  &kp PAGE_UP   &kp C_VOL_DN  &kp C_VOLUME_UP  &kp K_MUTE                      &kp LA(LC(DEL))  &kp EQUAL       &kp F11       &kp F12         &kp DELETE       &trans
&trans  &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4     &kp NUMBER_5                    &kp NUMBER_6     &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9    &kp NUMBER_0     &kp MINUS
&trans  &trans         &trans        &trans        &trans           &trans        &trans    &trans  &trans           &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp BSLH
                                     &trans        &trans           &trans        &trans    &trans  &trans           &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
